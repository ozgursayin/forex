[{"/Users/ozgursayin/Desktop/Coding/React/forex/src/index.js":"1","/Users/ozgursayin/Desktop/Coding/React/forex/src/App.js":"2","/Users/ozgursayin/Desktop/Coding/React/forex/src/reportWebVitals.js":"3","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/CurrencyConverter.jsx":"4","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/TimeRangeSelector.jsx":"5","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Navbar.jsx":"6","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Home.jsx":"7","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/CurrencyTable.jsx":"8","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Wallet.jsx":"9","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/ModalContent.jsx":"10","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/RemoveButton.jsx":"11","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Wallett.jsx":"12","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/WalletTable.jsx":"13"},{"size":563,"mtime":1609269190001,"results":"14","hashOfConfig":"15"},{"size":738,"mtime":1609422598324,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608486105969,"results":"17","hashOfConfig":"15"},{"size":5160,"mtime":1609357899173,"results":"18","hashOfConfig":"15"},{"size":734,"mtime":1609084789525,"results":"19","hashOfConfig":"15"},{"size":428,"mtime":1608844089842,"results":"20","hashOfConfig":"15"},{"size":1766,"mtime":1609426128204,"results":"21","hashOfConfig":"15"},{"size":5714,"mtime":1609423765405,"results":"22","hashOfConfig":"15"},{"size":8148,"mtime":1609421575705,"results":"23","hashOfConfig":"15"},{"size":713,"mtime":1609179227304,"results":"24","hashOfConfig":"15"},{"size":790,"mtime":1609271198965,"results":"25","hashOfConfig":"15"},{"size":1808,"mtime":1609425219272,"results":"26","hashOfConfig":"15"},{"size":6398,"mtime":1609426180442,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lpmutj",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ozgursayin/Desktop/Coding/React/forex/src/index.js",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/App.js",["58"],"import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport CurrencyConverter from \"./components/CurrencyConverter\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Wallet from \"./components/Wallet\";\nimport Wallett from \"./components/Wallett\";\n\nconst App = () => {\n  return (\n    <div>\n      <body>\n        <BrowserRouter>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/charts\" component={CurrencyConverter} />\n            <Route path=\"/wallet\" component={Wallett} />\n          </Switch>\n        </BrowserRouter>\n      </body>\n    </div>\n  );\n};\n\nexport default App;\n",["59","60"],"/Users/ozgursayin/Desktop/Coding/React/forex/src/reportWebVitals.js",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/CurrencyConverter.jsx",["61"],"import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { Card, Dimmer, Loader, Select } from \"semantic-ui-react\";\nimport Chart from \"react-apexcharts\";\nimport TimeRangeSelector from \"./TimeRangeSelector\";\nimport optionsJSON from \"../data/options.json\";\nimport selectedCurrenciesJSON from \"../data/selectedCurrencies.json\";\n\nconst CurrencyConverter = () => {\n  const [loading, setLoading] = useState(true);\n  const [priceData, setPriceData] = useState(null);\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"TRY\");\n  const [chartData, setChartData] = useState(null);\n  const [series, setSeries] = useState(null);\n  const [timeRange, setTimeRange] = useState(new Date() - 86400000 * 30);\n  const BASE_URL_CURRENCY = `https://api.exchangeratesapi.io/latest?`;\n  const HISTORICAL_CURRENCY_DATA = `https://api.exchangeratesapi.io/history`;\n  const options = [...selectedCurrenciesJSON, ...optionsJSON];\n\n  const handleFromSelect = (e, data) => {\n    setFromCurrency(data.value);\n  };\n\n  const handleToSelect = (e, data) => {\n    setToCurrency(data.value);\n  };\n  const handleTimeRange = (days) => {\n    const dayInMilliseconds = 86400000;\n    const timeRange = new Date() - dayInMilliseconds * days;\n    setTimeRange(timeRange);\n  };\n  const dateConverter = (timeRange) => {\n    const date = new Date(timeRange);\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const fullDate = `${year}-${month}-${day}`;\n    return fullDate;\n  };\n  const today = dateConverter(new Date());\n  const startDate = dateConverter(timeRange);\n\n  const getLatestCurrencyData = async () => {\n    const response = await fetch(\n      `${BASE_URL_CURRENCY}&base=${fromCurrency}&symbols=${toCurrency}`\n    );\n    const data = await response.json();\n\n    if (fromCurrency === \"EUR\" && toCurrency === \"EUR\") {\n      setPriceData(\"1.0000\");\n      return;\n    }\n    setPriceData(data.rates[toCurrency].toFixed(4));\n    setLoading(false);\n  };\n\n  const getHistoricalCurrencyData = async () => {\n    let response = \"\";\n    if (fromCurrency === \"EUR\" && toCurrency === \"EUR\") {\n      response = await fetch(\n        `${HISTORICAL_CURRENCY_DATA}?start_at=${startDate}&end_at=${today}&base=USD&symbols=USD`\n      );\n    } else {\n      response = await fetch(\n        `${HISTORICAL_CURRENCY_DATA}?start_at=${startDate}&end_at=${today}&base=${fromCurrency}&symbols=${toCurrency}`\n      );\n    }\n    const data = await response.json();\n    const orderedDates = {};\n    Object.keys(data.rates)\n      .sort(function (a, b) {\n        return a.split(\"-\").join(\"\").localeCompare(b.split(\"-\").join(\"\"));\n      })\n      .forEach(function (key) {\n        orderedDates[key] = data.rates[key];\n      });\n\n    const categories = Object.keys(orderedDates);\n    const seriesLong = Object.values(orderedDates);\n    const series = [];\n    seriesLong.forEach((serie) => {\n      series.push(\n        serie[toCurrency] !== undefined ? serie[toCurrency].toFixed(4) : 1\n      );\n    });\n    setChartData({\n      xaxis: {\n        categories: categories,\n      },\n    });\n    setSeries([{ text: fromCurrency, data: series }]);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getHistoricalCurrencyData();\n    getLatestCurrencyData();\n  }, [toCurrency, fromCurrency, timeRange]);\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div>\n          <Dimmer active inverted>\n            <Loader>Loading</Loader>\n          </Dimmer>\n        </div>\n      ) : (\n        <div className=\"price-container\">\n          <div className=\"form\">\n            <Select\n              placeholder=\"Select your currency\"\n              onChange={handleFromSelect}\n              options={options}\n              value={fromCurrency}\n            ></Select>\n            <Select\n              placeholder=\"Select your currency\"\n              onChange={handleToSelect}\n              options={options}\n              value={toCurrency}\n            ></Select>\n          </div>\n          <div className=\"chart-price\">\n            <Card className=\"chart-content\">\n              <Card.Content>\n                <Card.Header> </Card.Header>\n                <Card.Description>\n                  1 {fromCurrency}\n                  {\" =  \"}\n                  <strong>{priceData}</strong>\n                  {\"   \"}\n                  <strong>{toCurrency}</strong>\n                  {\"   \"}\n                </Card.Description>\n              </Card.Content>\n              <div className=\"time-stamp\">\n                {new Date().toJSON().slice(0, 10)}\n                {\"  \"}\n                {new Date().toJSON().slice(11, 19)} GMT\n              </div>\n            </Card>\n          </div>\n        </div>\n      )}\n      <TimeRangeSelector handleTimeRange={handleTimeRange} />\n      <div>\n        {series && chartData ? (\n          <Chart\n            options={chartData}\n            series={series}\n            type=\"line\"\n            width=\"1200\"\n            height=\"300\"\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default CurrencyConverter;\n","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/TimeRangeSelector.jsx",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Navbar.jsx",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Home.jsx",["62","63"],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/CurrencyTable.jsx",["64","65","66"],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Wallet.jsx",["67","68","69","70","71","72","73"],"import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport selectedCurrenciesJSON from \"../data/selectedCurrencies.json\";\nimport optionsJSON from \"../data/options.json\";\nimport { Modal, Select, Input, Button } from \"semantic-ui-react\";\nimport ModalContent from \"../components/ModalContent\";\nimport RemoveButton from \"./RemoveButton\";\n\nconst Wallet = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [newCurrencies, setNewCurrencies] = useState([]);\n  const [priceData, setPriceData] = useState();\n  const [fromCurrency, setFromCurrency] = useState(\"TRY\");\n  const [toCurrency, setToCurrency] = useState(\"TRY\");\n  const [toCurrencyValue, setToCurrencyValue] = useState(0);\n  const [total, setTotal] = useState([]);\n  const [totalCache, setTotalCache] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [selectedCurrencies, setSelectedCurrencies] = useState(\n    JSON.parse(localStorage.getItem(\"walletSelectedCurrencies\")) ||\n      selectedCurrenciesJSON\n  );\n  const [options, setOptions] = useState([\n    ...selectedCurrenciesJSON,\n    ...optionsJSON,\n  ]);\n  const baseCurrencyOptions = [...selectedCurrenciesJSON, ...optionsJSON];\n  const BASE_URL_CURRENCY = `https://api.exchangeratesapi.io/latest?base=${fromCurrency}`;\n  const selectedValues = selectedCurrencies.map(\n    (selectedValue) => selectedValue.idd\n  );\n\n  localStorage.setItem(\n    \"walletSelectedCurrencies\",\n    JSON.stringify(selectedCurrencies)\n  );\n\n  const handleSubmit = () => {\n    if (newCurrencies.length > 0) {\n      const newSelectedCurrencies = [...selectedCurrencies, ...newCurrencies];\n      setSelectedCurrencies(newSelectedCurrencies);\n    }\n    setModalOpen(false);\n    setNewCurrencies([]);\n  };\n  const handleCancel = () => {\n    setModalOpen(false);\n    setNewCurrencies(newCurrencies);\n  };\n\n  const handleToggle = (e, data) => {\n    let addedCurrencies = [...newCurrencies];\n    if (data.checked === true) {\n      addedCurrencies.push({\n        value: data.value,\n        text: data.text,\n        idd: data.idd,\n        flag: data.flag,\n        delete: \"X\",\n      });\n    } else {\n      addedCurrencies = addedCurrencies.filter(\n        (addedCurrency) => addedCurrency.value !== data.value\n      );\n    }\n    setNewCurrencies(addedCurrencies);\n  };\n\n  const handleTotalAmount = () => {\n    const totalValueObject = Object.values(total);\n    let totalAmountNumber = 0;\n    totalValueObject.forEach((t) => (totalAmountNumber += parseFloat(t)));\n    setTotalAmount(totalAmountNumber);\n  };\n\n  const handleRemoveCurrency = (value, text, idd, flag) => {\n    const currencyAddedToOptions = [...options];\n    currencyAddedToOptions.push({ value, text, idd, flag });\n    const selectedCurrenciesFiltered = selectedCurrencies.filter(\n      (s) => s.idd !== idd\n    );\n    if (total[value]) {\n      total[value] = 0;\n    }\n    handleTotalAmount();\n    currencyAddedToOptions.sort(function (a, b) {\n      return a.idd - b.idd;\n    });\n    setTotal(total);\n    setSelectedCurrencies(selectedCurrenciesFiltered);\n    setOptions(currencyAddedToOptions);\n  };\n  useEffect(() => {\n    const updatedOptions = options.filter(\n      (option) => !selectedValues.includes(option.idd)\n    );\n    setOptions(updatedOptions);\n  }, [selectedCurrencies]);\n\n  const fetchCurrencies = async () => {\n    setLoading(true);\n    const result = await fetch(BASE_URL_CURRENCY);\n    const resultCurrencies = await result.json();\n    if (fromCurrency === \"EUR\") {\n      const euroResultCurrencies = {\n        ...resultCurrencies,\n        rates: { ...resultCurrencies.rates, EUR: 1 },\n      };\n\n      setPriceData(euroResultCurrencies);\n      setLoading(false);\n      return;\n    }\n    setPriceData(resultCurrencies);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCurrencies();\n    setTotalAmount(0);\n    setToCurrencyValue(0);\n  }, []);\n\n  useEffect(() => {\n    fetchCurrencies();\n    setTotalAmount(0);\n    setTotal([]);\n  }, [fromCurrency, toCurrency]);\n\n  if (priceData) {\n    Object.entries(priceData.rates).map(([key, value]) => ({\n      [key]: value,\n    }));\n  }\n\n  const handleFromSelect = (e, data) => {\n    setFromCurrency(data.value);\n  };\n\n  const currencyConvert = (e, data) => {\n    setToCurrencyValue(\n      priceData &&\n        parseFloat(toCurrencyValue) +\n          (data.value * (1 / priceData.rates[data.currency])).toFixed(4)\n    );\n\n    if (data) {\n      total[data.currency] = parseFloat(\n        data.value * parseFloat(1 / priceData.rates[data.currency])\n      ).toFixed(4);\n    }\n    handleTotalAmount();\n  };\n\n  const walletContent = selectedCurrencies.map((selectedCurrency) => (\n    <div key={selectedCurrency.idd} className=\"currency-box\">\n      <td>\n        <div className=\"ui segment \">\n          <i className={selectedCurrency[\"flag\"] + \" flag\"} />\n          <Input\n            className=\"currency-name\"\n            onChange={handleFromSelect}\n            value={selectedCurrency.text}\n          />\n          <Input\n            className=\"currency-name\"\n            onChange={currencyConvert}\n            placeholder=\"Enter an amount\"\n            currency={selectedCurrency.value}\n          />\n          <span> </span>\n          <RemoveButton\n            selectedCurrency={selectedCurrency}\n            handleRemoveCurrency={handleRemoveCurrency}\n          />\n        </div>\n      </td>\n    </div>\n  ));\n  const baseCurrencyContent = (\n    <div className=\"price-container\">\n      <div className=\"form\">\n        <Select\n          placeholder=\"Select your currency\"\n          onChange={handleFromSelect}\n          options={baseCurrencyOptions}\n          value={fromCurrency}\n        ></Select>\n        <h1>\n          TOTAL AMOUNT:\n          <h2>{fromCurrency}</h2>\n          <h2>{parseFloat(totalAmount.toFixed(2)).toLocaleString()}</h2>\n        </h1>\n      </div>\n      <div className=\"time-stamp\">\n        {new Date().toJSON().slice(0, 10)}\n        {\"  \"}\n        {new Date().toJSON().slice(11, 19)} GMT\n      </div>\n    </div>\n  );\n\n  const baseCurrencyContent2 = (\n    <div className=\"base-currency\">\n      <div className=\"form\">\n        <td>\n          <Select\n            placeholder=\"Select your currency\"\n            onChange={handleFromSelect}\n            options={baseCurrencyOptions}\n            value={fromCurrency}\n          ></Select>\n          <h1>\n            TOTAL AMOUNT:\n            <h2>{fromCurrency}</h2>\n            <h2>{parseFloat(totalAmount.toFixed(2)).toLocaleString()}</h2>\n          </h1>\n        </td>\n      </div>\n    </div>\n  );\n\n  if (loading || !priceData) {\n    return <h1 style={{ color: \"white\" }}>Loading...</h1>;\n  }\n\n  return (\n    <div className=\"currency-table\">\n      {total}\n      <div className=\"currency-list\">\n        <div className=\"form\">\n          <tbody>\n            <tr>\n              {baseCurrencyContent}\n              {walletContent}\n            </tr>\n          </tbody>\n        </div>\n        <div className=\"wallet-currency-add-button\">\n          <Button className=\"blue \" onClick={() => setModalOpen(true)}>\n            +\n          </Button>\n        </div>\n        <div className=\"time-stamp\">\n          {new Date().toJSON().slice(0, 10)}\n          {\"  \"}\n          {new Date().toJSON().slice(11, 19)} GMT\n        </div>\n      </div>\n\n      <Modal\n        closeIcon\n        open={modalOpen}\n        onSubmit={handleSubmit}\n        size=\"mini\"\n        className=\"modal\"\n        onClose={() => setModalOpen(false)}\n        onOpen={() => setModalOpen(true)}\n      >\n        <Modal.Content scrolling>\n          <ModalContent options={options} handleToggle={handleToggle} />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            type=\"cancel\"\n            color=\"red\"\n            content=\"Close\"\n            modalContent={<ModalContent />}\n            onClick={handleCancel}\n          />\n          <Button\n            type=\"submit\"\n            color=\"green\"\n            content=\"Save\"\n            modalContent={<ModalContent />}\n            onClick={handleSubmit}\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Wallet;\n","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/ModalContent.jsx",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/RemoveButton.jsx",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Wallett.jsx",["74","75","76"],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/WalletTable.jsx",["77","78","79","80","81","82","83","84","85","86"],{"ruleId":"87","severity":1,"message":"88","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":14},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":99,"column":6,"nodeType":"97","endLine":99,"endColumn":43,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":25,"column":6,"nodeType":"97","endLine":25,"endColumn":8,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"99","line":29,"column":6,"nodeType":"97","endLine":29,"endColumn":20,"suggestions":"101"},{"ruleId":"87","severity":1,"message":"102","line":2,"column":25,"nodeType":"89","messageId":"90","endLine":2,"endColumn":30},{"ruleId":"95","severity":1,"message":"103","line":75,"column":6,"nodeType":"97","endLine":75,"endColumn":26,"suggestions":"104"},{"ruleId":"87","severity":1,"message":"105","line":107,"column":9,"nodeType":"89","messageId":"90","endLine":107,"endColumn":17},{"ruleId":"87","severity":1,"message":"106","line":15,"column":22,"nodeType":"89","messageId":"90","endLine":15,"endColumn":35},{"ruleId":"87","severity":1,"message":"107","line":18,"column":10,"nodeType":"89","messageId":"90","endLine":18,"endColumn":20},{"ruleId":"87","severity":1,"message":"108","line":18,"column":22,"nodeType":"89","messageId":"90","endLine":18,"endColumn":35},{"ruleId":"95","severity":1,"message":"103","line":99,"column":6,"nodeType":"97","endLine":99,"endColumn":26,"suggestions":"109"},{"ruleId":"95","severity":1,"message":"99","line":123,"column":6,"nodeType":"97","endLine":123,"endColumn":8,"suggestions":"110"},{"ruleId":"95","severity":1,"message":"99","line":129,"column":6,"nodeType":"97","endLine":129,"endColumn":32,"suggestions":"111"},{"ruleId":"87","severity":1,"message":"112","line":204,"column":9,"nodeType":"89","messageId":"90","endLine":204,"endColumn":29},{"ruleId":"87","severity":1,"message":"113","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":21},{"ruleId":"95","severity":1,"message":"99","line":26,"column":6,"nodeType":"97","endLine":26,"endColumn":8,"suggestions":"114"},{"ruleId":"95","severity":1,"message":"99","line":30,"column":6,"nodeType":"97","endLine":30,"endColumn":20,"suggestions":"115"},{"ruleId":"87","severity":1,"message":"102","line":2,"column":25,"nodeType":"89","messageId":"90","endLine":2,"endColumn":30},{"ruleId":"87","severity":1,"message":"116","line":23,"column":10,"nodeType":"89","messageId":"90","endLine":23,"endColumn":17},{"ruleId":"87","severity":1,"message":"117","line":23,"column":19,"nodeType":"89","messageId":"90","endLine":23,"endColumn":29},{"ruleId":"87","severity":1,"message":"118","line":27,"column":10,"nodeType":"89","messageId":"90","endLine":27,"endColumn":20},{"ruleId":"87","severity":1,"message":"106","line":27,"column":22,"nodeType":"89","messageId":"90","endLine":27,"endColumn":35},{"ruleId":"87","severity":1,"message":"107","line":30,"column":10,"nodeType":"89","messageId":"90","endLine":30,"endColumn":20},{"ruleId":"87","severity":1,"message":"108","line":30,"column":22,"nodeType":"89","messageId":"90","endLine":30,"endColumn":35},{"ruleId":"87","severity":1,"message":"119","line":32,"column":9,"nodeType":"89","messageId":"90","endLine":32,"endColumn":28},{"ruleId":"87","severity":1,"message":"120","line":33,"column":9,"nodeType":"89","messageId":"90","endLine":33,"endColumn":26},{"ruleId":"95","severity":1,"message":"103","line":106,"column":6,"nodeType":"97","endLine":106,"endColumn":26,"suggestions":"121"},"no-unused-vars","'Wallet' is defined but never used.","Identifier","unusedVar","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getHistoricalCurrencyData' and 'getLatestCurrencyData'. Either include them or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has a missing dependency: 'fetchCurrencies'. Either include it or remove the dependency array.",["125"],["126"],"'Table' is defined but never used.","React Hook useEffect has missing dependencies: 'options' and 'selectedValues'. Either include them or remove the dependency array.",["127"],"'overview' is assigned a value but never used.","'setToCurrency' is assigned a value but never used.","'totalCache' is assigned a value but never used.","'setTotalCache' is assigned a value but never used.",["128"],["129"],["130"],"'baseCurrencyContent2' is assigned a value but never used.","'CurrencyTable' is defined but never used.",["131"],["132"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'toCurrency' is assigned a value but never used.","'baseCurrencyOptions' is assigned a value but never used.","'BASE_URL_CURRENCY' is assigned a value but never used.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},{"desc":"136","fix":"143"},{"desc":"144","fix":"145"},{"desc":"136","fix":"146"},{"desc":"138","fix":"147"},{"desc":"140","fix":"148"},"Update the dependencies array to be: [toCurrency, fromCurrency, timeRange, getHistoricalCurrencyData, getLatestCurrencyData]",{"range":"149","text":"150"},"Update the dependencies array to be: [fetchCurrencies]",{"range":"151","text":"152"},"Update the dependencies array to be: [fetchCurrencies, fromCurrency]",{"range":"153","text":"154"},"Update the dependencies array to be: [options, selectedCurrencies, selectedValues]",{"range":"155","text":"156"},{"range":"157","text":"156"},{"range":"158","text":"152"},"Update the dependencies array to be: [fetchCurrencies, fromCurrency, toCurrency]",{"range":"159","text":"160"},{"range":"161","text":"152"},{"range":"162","text":"154"},{"range":"163","text":"156"},[3360,3397],"[toCurrency, fromCurrency, timeRange, getHistoricalCurrencyData, getLatestCurrencyData]",[904,906],"[fetchCurrencies]",[958,972],"[fetchCurrencies, fromCurrency]",[2376,2396],"[options, selectedCurrencies, selectedValues]",[3313,3333],[3914,3916],[4009,4035],"[fetchCurrencies, fromCurrency, toCurrency]",[947,949],[1001,1015],[3582,3602]]