[{"/Users/ozgursayin/Desktop/Coding/React/forex/src/index.js":"1","/Users/ozgursayin/Desktop/Coding/React/forex/src/App.js":"2","/Users/ozgursayin/Desktop/Coding/React/forex/src/reportWebVitals.js":"3","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/CurrencyConverter.jsx":"4","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/TimeRangeSelector.jsx":"5","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Navbar.jsx":"6","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Home.jsx":"7","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/CurrencyTable.jsx":"8","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Wallet.jsx":"9","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/ModalContent.jsx":"10","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/RemoveButton.jsx":"11"},{"size":546,"mtime":1609197360790,"results":"12","hashOfConfig":"13"},{"size":650,"mtime":1609174393039,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608486105969,"results":"15","hashOfConfig":"13"},{"size":5128,"mtime":1609174373310,"results":"16","hashOfConfig":"13"},{"size":734,"mtime":1609084789525,"results":"17","hashOfConfig":"13"},{"size":428,"mtime":1608844089842,"results":"18","hashOfConfig":"13"},{"size":1930,"mtime":1609179461937,"results":"19","hashOfConfig":"13"},{"size":4511,"mtime":1609179882691,"results":"20","hashOfConfig":"13"},{"size":7345,"mtime":1609266213652,"results":"21","hashOfConfig":"13"},{"size":713,"mtime":1609179227304,"results":"22","hashOfConfig":"13"},{"size":714,"mtime":1609195491305,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"lpmutj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/ozgursayin/Desktop/Coding/React/forex/src/index.js",[],["50","51"],"/Users/ozgursayin/Desktop/Coding/React/forex/src/App.js",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/reportWebVitals.js",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/CurrencyConverter.jsx",["52"],"import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { Card, Dimmer, Loader, Select } from \"semantic-ui-react\";\nimport Chart from \"react-apexcharts\";\nimport TimeRangeSelector from \"./TimeRangeSelector\";\nimport optionsJSON from \"../data/options.json\";\nimport selectedCurrenciesJSON from \"../data/selectedCurrencies.json\";\n\nconst CurrencyConverter = () => {\n  const [loading, setLoading] = useState(true);\n  const [priceData, setPriceData] = useState(null);\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"TRY\");\n  const [chartData, setChartData] = useState(null);\n  const [series, setSeries] = useState(null);\n  const [timeRange, setTimeRange] = useState(new Date() - 86400000 * 30);\n  const BASE_URL_CURRENCY = `https://api.exchangeratesapi.io/latest?`;\n  const HISTORICAL_CURRENCY_DATA = `https://api.exchangeratesapi.io/history`;\n  const options = [...selectedCurrenciesJSON, ...optionsJSON];\n\n  const handleFromSelect = (e, data) => {\n    setFromCurrency(data.value);\n  };\n\n  const handleToSelect = (e, data) => {\n    setToCurrency(data.value);\n  };\n  const handleTimeRange = (days) => {\n    const dayInMilliseconds = 86400000;\n    const timeRange = new Date() - dayInMilliseconds * days;\n    setTimeRange(timeRange);\n  };\n  const dateConverter = (timeRange) => {\n    const date = new Date(timeRange);\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const fullDate = `${year}-${month}-${day}`;\n    return fullDate;\n  };\n  const today = dateConverter(new Date());\n  const startDate = dateConverter(timeRange);\n\n  const getLatestCurrencyData = async () => {\n    const response = await fetch(\n      `${BASE_URL_CURRENCY}&base=${fromCurrency}&symbols=${toCurrency}`\n    );\n    const data = await response.json();\n\n    if (fromCurrency === \"EUR\" && toCurrency === \"EUR\") {\n      setPriceData(\"1.0000\");\n      return;\n    }\n    setPriceData(data.rates[toCurrency].toFixed(4));\n    setLoading(false);\n  };\n\n  const getHistoricalCurrencyData = async () => {\n    let response = \"\";\n    if (fromCurrency === \"EUR\" && toCurrency === \"EUR\") {\n      response = await fetch(\n        `${HISTORICAL_CURRENCY_DATA}?start_at=${startDate}&end_at=${today}&base=USD&symbols=USD`\n      );\n    } else {\n      response = await fetch(\n        `${HISTORICAL_CURRENCY_DATA}?start_at=${startDate}&end_at=${today}&base=${fromCurrency}&symbols=${toCurrency}`\n      );\n    }\n    const data = await response.json();\n    const orderedDates = {};\n    Object.keys(data.rates)\n      .sort(function (a, b) {\n        return a.split(\"-\").join(\"\").localeCompare(b.split(\"-\").join(\"\"));\n      })\n      .forEach(function (key) {\n        orderedDates[key] = data.rates[key];\n      });\n\n    const categories = Object.keys(orderedDates);\n    const seriesLong = Object.values(orderedDates);\n    const series = [];\n    seriesLong.forEach((serie) => {\n      series.push(\n        serie[toCurrency] !== undefined ? serie[toCurrency].toFixed(4) : 1\n      );\n    });\n    setChartData({\n      xaxis: {\n        categories: categories,\n      },\n    });\n    setSeries([{ text: fromCurrency, data: series }]);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getHistoricalCurrencyData();\n    getLatestCurrencyData();\n  }, [toCurrency, fromCurrency, timeRange]);\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div>\n          <Dimmer active inverted>\n            <Loader>Loading</Loader>\n          </Dimmer>\n        </div>\n      ) : (\n        <div className=\"price-container\">\n          <div className=\"form\">\n            <Select\n              placeholder=\"Select your currency\"\n              onChange={handleFromSelect}\n              options={options}\n              value={fromCurrency}\n            ></Select>\n            <Select\n              placeholder=\"Select your currency\"\n              onChange={handleToSelect}\n              options={options}\n              value={toCurrency}\n            ></Select>\n          </div>\n          <div className=\"price\">\n            <Card>\n              <Card.Content>\n                <Card.Header> </Card.Header>\n                <Card.Description>\n                  1 {fromCurrency}\n                  {\" =  \"}\n                  <strong>{priceData}</strong>\n                  {\"   \"}\n                  <strong>{toCurrency}</strong>\n                  {\"   \"}\n                </Card.Description>\n              </Card.Content>\n              <div className=\"time-stamp\">\n                {new Date().toJSON().slice(0, 10)}\n                {\"  \"}\n                {new Date().toJSON().slice(11, 19)} GMT\n              </div>\n            </Card>\n          </div>\n        </div>\n      )}\n      <TimeRangeSelector handleTimeRange={handleTimeRange} />\n      <div>\n        {series && chartData ? (\n          <Chart\n            options={chartData}\n            series={series}\n            type=\"line\"\n            width=\"1200\"\n            height=\"300\"\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default CurrencyConverter;\n","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/TimeRangeSelector.jsx",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Navbar.jsx",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Home.jsx",["53","54"],"import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { Dimmer, Loader, Select } from \"semantic-ui-react\";\nimport CurrencyTable from \"./CurrencyTable\";\nimport optionsJSON from \"../data/options.json\";\nimport selectedCurrenciesJSON from \"../data/selectedCurrencies.json\";\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [priceData, setPriceData] = useState();\n  const [fromCurrency, setFromCurrency] = useState(\"TRY\");\n  const options = [...selectedCurrenciesJSON, ...optionsJSON];\n  const BASE_URL_CURRENCY = `https://api.exchangeratesapi.io/latest?base=${fromCurrency}`;\n\n  const fetchCurrencies = async () => {\n    setLoading(true);\n    const result = await fetch(BASE_URL_CURRENCY);\n    const resultCurrencies = await result.json();\n    setPriceData(resultCurrencies);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCurrencies();\n  }, []);\n\n  useEffect(() => {\n    fetchCurrencies();\n  }, [fromCurrency]);\n\n  if (priceData) {\n    Object.entries(priceData.rates).map(([key, value]) => ({\n      [key]: value,\n    }));\n  }\n\n  const handleFromSelect = (e, data) => {\n    setFromCurrency(data.value);\n  };\n\n  if (loading || !priceData) {\n    return (\n      <div>\n        <Dimmer active inverted>\n          <Loader>Loading...</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"price-container\">\n        <div className=\"form\">\n          <Select\n            placeholder=\"Select your currency\"\n            onChange={handleFromSelect}\n            options={options}\n            value={fromCurrency}\n          ></Select>\n        </div>\n        <div className=\"time-stamp\">\n          {new Date().toJSON().slice(0, 10)}\n          {\"  \"}\n          {new Date().toJSON().slice(11, 19)} GMT\n        </div>\n      </div>\n\n      <CurrencyTable baseCurrency={fromCurrency} priceData={priceData} />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/CurrencyTable.jsx",["55"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport selectedCurrenciesJSON from \"../data/selectedCurrencies.json\";\nimport optionsJSON from \"../data/options.json\";\nimport ModalContent from \"../components/ModalContent\";\nimport \"../App.css\";\nimport RemoveButton from \"./RemoveButton\";\n\nconst CurrencyTable = ({ baseCurrency, priceData }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newCurrencies, setNewCurrencies] = useState([]);\n  const [selectedCurrencies, setSelectedCurrencies] = useState(\n    JSON.parse(localStorage.getItem(\"homeSelectedCurrencies\")) ||\n      selectedCurrenciesJSON\n  );\n  const [options, setOptions] = useState(optionsJSON);\n  const selectedValues = selectedCurrencies.map(\n    (selectedValue) => selectedValue.idd\n  );\n  localStorage.setItem(\n    \"homeSelectedCurrencies\",\n    JSON.stringify(selectedCurrencies)\n  );\n\n  const handleSubmit = () => {\n    if (newCurrencies.length > 0) {\n      const newSelectedCurrencies = [...selectedCurrencies, ...newCurrencies];\n      setSelectedCurrencies(newSelectedCurrencies);\n    }\n    setModalOpen(false);\n    setNewCurrencies([]);\n  };\n\n  const handleCancel = () => {\n    setModalOpen(false);\n    setNewCurrencies(newCurrencies);\n  };\n\n  const handleToggle = (e, data) => {\n    let addedCurrencies = [...newCurrencies];\n    if (data.checked === true) {\n      addedCurrencies.push({\n        value: data.value,\n        text: data.text,\n        idd: data.idd,\n        flag: data.flag,\n        delete: \"X\",\n      });\n    } else {\n      addedCurrencies = addedCurrencies.filter(\n        (addedCurrency) => addedCurrency.value !== data.value\n      );\n    }\n    setNewCurrencies(addedCurrencies);\n  };\n\n  const handleRemoveCurrency = (value, text, idd, flag) => {\n    const currencyAddedToOptions = [...options];\n    currencyAddedToOptions.push({ value, text, idd, flag });\n    const selectedCurrenciesFiltered = selectedCurrencies.filter(\n      (s) => s.idd !== idd\n    );\n    currencyAddedToOptions.sort(function (a, b) {\n      return a.idd - b.idd;\n    });\n    setSelectedCurrencies(selectedCurrenciesFiltered);\n    setOptions(currencyAddedToOptions);\n  };\n\n  useEffect(() => {\n    const updatedOptions = options.filter(\n      (option) => !selectedValues.includes(option.idd)\n    );\n    setOptions(updatedOptions);\n  }, [selectedCurrencies]);\n\n  const overview = selectedCurrencies.map((selectedCurrency) => (\n    <tbody key={selectedCurrency[\"idd\"]}>\n      <tr>\n        <td>\n          <h4 className=\"ui image header\">\n            <div className=\"content\">\n              <i className={selectedCurrency[\"flag\"] + \" flag\"} /> 1{\" \"}\n              {selectedCurrency[\"text\"]}\n              <span> </span>\n            </div>\n          </h4>\n        </td>\n        <td>\n          {priceData.rates[selectedCurrency[\"value\"]] !== undefined\n            ? (1 / priceData.rates[selectedCurrency[\"value\"]]).toFixed(4) +\n              `  ${baseCurrency}`\n            : \"1.000 EUR\"}\n        </td>\n        <td>\n          <RemoveButton\n            selectedCurrency={selectedCurrency}\n            handleRemoveCurrency={handleRemoveCurrency}\n          />\n        </td>\n      </tr>\n    </tbody>\n  ));\n\n  return (\n    <div className=\"currency-table\">\n      <table className=\"ui celled padded table\">\n        <thead>\n          <tr>\n            <th>Currency</th>\n            <th>Rate</th>\n            <th>Remove</th>\n          </tr>\n        </thead>\n        {overview}\n      </table>\n      <div className=\"currency-add-button\">\n        <Button className=\"blue\" onClick={() => setModalOpen(true)}>\n          +\n        </Button>\n      </div>\n      <Modal\n        closeIcon\n        open={modalOpen}\n        onSubmit={handleSubmit}\n        size=\"mini\"\n        className=\"modal\"\n        onClose={() => setModalOpen(false)}\n        onOpen={() => setModalOpen(true)}\n      >\n        <Modal.Content scrolling>\n          <ModalContent options={options} handleToggle={handleToggle} />\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button\n            type=\"cancel\"\n            color=\"red\"\n            content=\"Close\"\n            modalContent={<ModalContent />}\n            onClick={handleCancel}\n          />\n          <Button\n            type=\"submit\"\n            color=\"green\"\n            content=\"Save\"\n            modalContent={<ModalContent />}\n            onClick={handleSubmit}\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CurrencyTable;\n","/Users/ozgursayin/Desktop/Coding/React/forex/src/components/Wallet.jsx",["56","57","58","59","60","61"],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/ModalContent.jsx",[],"/Users/ozgursayin/Desktop/Coding/React/forex/src/components/RemoveButton.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":99,"column":6,"nodeType":"68","endLine":99,"endColumn":43,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":25,"column":6,"nodeType":"68","endLine":25,"endColumn":8,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"70","line":29,"column":6,"nodeType":"68","endLine":29,"endColumn":20,"suggestions":"72"},{"ruleId":"66","severity":1,"message":"73","line":75,"column":6,"nodeType":"68","endLine":75,"endColumn":26,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":15,"column":22,"nodeType":"77","messageId":"78","endLine":15,"endColumn":35},{"ruleId":"75","severity":1,"message":"79","line":18,"column":10,"nodeType":"77","messageId":"78","endLine":18,"endColumn":20},{"ruleId":"75","severity":1,"message":"80","line":18,"column":22,"nodeType":"77","messageId":"78","endLine":18,"endColumn":35},{"ruleId":"66","severity":1,"message":"73","line":99,"column":6,"nodeType":"68","endLine":99,"endColumn":26,"suggestions":"81"},{"ruleId":"66","severity":1,"message":"70","line":123,"column":6,"nodeType":"68","endLine":123,"endColumn":8,"suggestions":"82"},{"ruleId":"66","severity":1,"message":"70","line":129,"column":6,"nodeType":"68","endLine":129,"endColumn":32,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getHistoricalCurrencyData' and 'getLatestCurrencyData'. Either include them or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has a missing dependency: 'fetchCurrencies'. Either include it or remove the dependency array.",["87"],["88"],"React Hook useEffect has missing dependencies: 'options' and 'selectedValues'. Either include them or remove the dependency array.",["89"],"no-unused-vars","'setToCurrency' is assigned a value but never used.","Identifier","unusedVar","'totalCache' is assigned a value but never used.","'setTotalCache' is assigned a value but never used.",["90"],["91"],["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"99","fix":"101"},{"desc":"95","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [toCurrency, fromCurrency, timeRange, getHistoricalCurrencyData, getLatestCurrencyData]",{"range":"105","text":"106"},"Update the dependencies array to be: [fetchCurrencies]",{"range":"107","text":"108"},"Update the dependencies array to be: [fetchCurrencies, fromCurrency]",{"range":"109","text":"110"},"Update the dependencies array to be: [options, selectedCurrencies, selectedValues]",{"range":"111","text":"112"},{"range":"113","text":"112"},{"range":"114","text":"108"},"Update the dependencies array to be: [fetchCurrencies, fromCurrency, toCurrency]",{"range":"115","text":"116"},[3360,3397],"[toCurrency, fromCurrency, timeRange, getHistoricalCurrencyData, getLatestCurrencyData]",[904,906],"[fetchCurrencies]",[958,972],"[fetchCurrencies, fromCurrency]",[2362,2382],"[options, selectedCurrencies, selectedValues]",[3313,3333],[3914,3916],[4009,4035],"[fetchCurrencies, fromCurrency, toCurrency]"]