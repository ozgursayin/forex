{"version":3,"sources":["components/Common/TimeRangeSelector.jsx","components/Common/TimeStamp.jsx","components/Charts/CurrencyConverter.jsx","components/Common/Navbar.jsx","components/Common/ModalContent.jsx","components/Common/RemoveButton.jsx","components/Common/Content.jsx","components/Home/CurrencyTable.jsx","components/Common/BaseCurrencySelector.jsx","components/Home/Home.jsx","components/Wallet/WalletTable.jsx","components/Wallet/Wallet.jsx","App.js","reportWebVitals.js","index.js"],"names":["TimeRangeSelector","handleTimeRange","className","Button","onClick","TimeStamp","Date","toJSON","slice","CurrencyConverter","useState","loading","setLoading","priceData","setPriceData","fromCurrency","setFromCurrency","toCurrency","setToCurrency","chartData","setChartData","series","setSeries","timeRange","setTimeRange","HISTORICAL_CURRENCY_DATA","options","selectedCurrenciesJSON","optionsJSON","dateConverter","date","year","getFullYear","month","getMonth","day","getDate","today","startDate","getLatestCurrencyData","a","fetch","response","json","data","rates","toFixed","getHistoricalCurrencyData","orderedDates","Object","keys","sort","b","split","join","localeCompare","forEach","key","categories","seriesLong","values","serie","push","undefined","xaxis","text","useEffect","Dimmer","active","inverted","Loader","Select","placeholder","onChange","e","value","Card","Content","Header","Description","days","type","width","height","Navbar","to","exact","ModalContent","handleToggle","modalContent","map","option","Checkbox","toggle","cid","flag","readOnly","tabIndex","RemoveButton","selectedCurrency","handleRemoveCurrency","icon","size","disabled","selectedCurrencies","handleFromSelect","currencyConvert","baseCurrency","Input","currency","CurrencyTable","modalOpen","setModalOpen","newCurrencies","setNewCurrencies","JSON","parse","localStorage","getItem","setSelectedCurrencies","setOptions","selectedValues","selectedValue","setItem","stringify","handleSubmit","length","newSelectedCurrencies","updatedOptions","filter","includes","currencyAddedToOptions","selectedCurrenciesFiltered","s","Modal","closeIcon","open","onSubmit","onClose","onOpen","scrolling","addedCurrencies","checked","delete","addedCurrency","Actions","color","content","BaseCurrencySelector","Home","BASE_URL_CURRENCY","fetchCurrencies","result","resultCurrencies","entries","WalletTable","total","setTotal","totalAmount","setTotalAmount","toCurrencyValue","setToCurrencyValue","handleTotalAmount","totalValueObject","totalAmountNumber","t","parseFloat","clear","toLocaleString","console","log","Wallet","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2678f10.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nconst TimeRangeSelector = ({ handleTimeRange }) => {\n  return (\n    <div className=\"time-range-buttons\">\n      <Button className=\"blue\" onClick={() => handleTimeRange(370)}>\n        1 Year\n      </Button>\n      <Button className=\"blue\" onClick={() => handleTimeRange(185)}>\n        6 Months\n      </Button>\n      <Button className=\"blue\" onClick={() => handleTimeRange(93)}>\n        3 Months\n      </Button>\n      <Button className=\"blue\" onClick={() => handleTimeRange(31)}>\n        1 Month\n      </Button>\n      <Button className=\"blue\" onClick={() => handleTimeRange(14)}>\n        2 Weeks\n      </Button>\n    </div>\n  );\n};\n\nexport default TimeRangeSelector;\n","import React from \"react\";\n\nconst TimeStamp = () => {\n  return (\n    <div>\n      <div className=\"time-stamp\">\n        {new Date().toJSON().slice(0, 10)}\n        {\"  \"}\n        {new Date().toJSON().slice(11, 19)} GMT\n      </div>\n    </div>\n  );\n};\n\nexport default TimeStamp;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../App.css\";\nimport { Card, Dimmer, Loader, Select } from \"semantic-ui-react\";\nimport Chart from \"react-apexcharts\";\nimport TimeRangeSelector from \"../Common/TimeRangeSelector\";\nimport optionsJSON from \"../../data/options.json\";\nimport selectedCurrenciesJSON from \"../../data/selectedCurrencies.json\";\nimport TimeStamp from \"../Common/TimeStamp\";\n\nconst CurrencyConverter = () => {\n  const [loading, setLoading] = useState(true);\n  const [priceData, setPriceData] = useState(null);\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"TRY\");\n  const [chartData, setChartData] = useState(null);\n  const [series, setSeries] = useState(null);\n  const [timeRange, setTimeRange] = useState(new Date() - 86400000 * 30);\n  const BASE_URL_CURRENCY = `https://api.exchangeratesapi.io/latest?`;\n  const HISTORICAL_CURRENCY_DATA = `https://api.exchangeratesapi.io/history`;\n  const options = [...selectedCurrenciesJSON, ...optionsJSON];\n\n  const handleFromSelect = (e, data) => {\n    setFromCurrency(data.value);\n  };\n\n  const handleToSelect = (e, data) => {\n    setToCurrency(data.value);\n  };\n  const handleTimeRange = (days) => {\n    const dayInMilliseconds = 86400000;\n    const timeRange = new Date() - dayInMilliseconds * days;\n    setTimeRange(timeRange);\n  };\n  const dateConverter = (timeRange) => {\n    const date = new Date(timeRange);\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const fullDate = `${year}-${month}-${day}`;\n    return fullDate;\n  };\n  const today = dateConverter(new Date());\n  const startDate = dateConverter(timeRange);\n\n  const getLatestCurrencyData = async () => {\n    const response = await fetch(\n      `${BASE_URL_CURRENCY}&base=${fromCurrency}&symbols=${toCurrency}`\n    );\n    const data = await response.json();\n\n    if (fromCurrency === \"EUR\" && toCurrency === \"EUR\") {\n      setPriceData(\"1.0000\");\n      return;\n    }\n    setPriceData(data.rates[toCurrency].toFixed(4));\n    setLoading(false);\n  };\n\n  const getHistoricalCurrencyData = async () => {\n    let response = \"\";\n    if (fromCurrency === \"EUR\" && toCurrency === \"EUR\") {\n      response = await fetch(\n        `${HISTORICAL_CURRENCY_DATA}?start_at=${startDate}&end_at=${today}&base=USD&symbols=USD`\n      );\n    } else {\n      response = await fetch(\n        `${HISTORICAL_CURRENCY_DATA}?start_at=${startDate}&end_at=${today}&base=${fromCurrency}&symbols=${toCurrency}`\n      );\n    }\n    const data = await response.json();\n    const orderedDates = {};\n    Object.keys(data.rates)\n      .sort(function (a, b) {\n        return a.split(\"-\").join(\"\").localeCompare(b.split(\"-\").join(\"\"));\n      })\n      .forEach(function (key) {\n        orderedDates[key] = data.rates[key];\n      });\n\n    const categories = Object.keys(orderedDates);\n    const seriesLong = Object.values(orderedDates);\n    const series = [];\n    seriesLong.forEach((serie) => {\n      series.push(\n        serie[toCurrency] !== undefined ? serie[toCurrency].toFixed(4) : 1\n      );\n    });\n    setChartData({\n      xaxis: {\n        categories: categories,\n      },\n    });\n    setSeries([{ text: fromCurrency, data: series }]);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getHistoricalCurrencyData();\n    getLatestCurrencyData();\n  }, [toCurrency, fromCurrency, timeRange]);\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div>\n          <Dimmer active inverted>\n            <Loader>Loading</Loader>\n          </Dimmer>\n        </div>\n      ) : (\n        <div className=\"price-container\">\n          <div className=\"form\">\n            <Select\n              placeholder=\"Select your currency\"\n              onChange={handleFromSelect}\n              options={options}\n              value={fromCurrency}\n            ></Select>\n            <Select\n              placeholder=\"Select your currency\"\n              onChange={handleToSelect}\n              options={options}\n              value={toCurrency}\n            ></Select>\n          </div>\n          <div className=\"chart-price\">\n            <Card className=\"chart-content\">\n              <Card.Content>\n                <Card.Header> </Card.Header>\n                <Card.Description>\n                  1 {fromCurrency}\n                  {\" =  \"}\n                  <strong>{priceData}</strong>\n                  {\"   \"}\n                  <strong>{toCurrency}</strong>\n                  {\"   \"}\n                </Card.Description>\n              </Card.Content>\n              <TimeStamp />\n            </Card>\n          </div>\n        </div>\n      )}\n      <TimeRangeSelector handleTimeRange={handleTimeRange} />\n      <div>\n        {series && chartData ? (\n          <Chart\n            options={chartData}\n            series={series}\n            type=\"line\"\n            width=\"1200\"\n            height=\"300\"\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default CurrencyConverter;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../../App.css\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"nav\">\n      <NavLink to=\"/\" exact className=\"item\">\n        Home\n      </NavLink>\n      <NavLink to=\"/charts\" className=\"item\">\n        Charts\n      </NavLink>\n      <NavLink to=\"/wallet\" className=\"item\">\n        Wallet\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Checkbox } from \"semantic-ui-react\";\n\nconst ModalContent = ({ options, handleToggle }) => {\n  const modalContent = options.map((option) => (\n    <div key={option.cid}>\n      <Checkbox\n        toggle\n        onChange={handleToggle}\n        value={option.value}\n        text={option.text}\n        cid={option.cid}\n        flag={option.flag}\n      />\n      <span> </span>\n      <div className=\"ui fitted toggle checkbox\">\n        <input type=\"checkbox\" className=\"hidden\" readOnly=\"\" tabIndex=\"0\" />\n        <h4>\n          {option.text} <i className={option.flag} />\n        </h4>\n      </div>\n    </div>\n  ));\n  return <div>{modalContent}</div>;\n};\n\nexport default ModalContent;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nconst RemoveButton = ({ selectedCurrency, handleRemoveCurrency }) => {\n  return (\n    <>\n      {selectedCurrency[\"delete\"] === \"X\" ? (\n        <Button\n          icon=\"delete\"\n          size=\"tiny\"\n          className=\"red delete-button\"\n          onClick={() =>\n            handleRemoveCurrency(\n              selectedCurrency[\"value\"],\n              selectedCurrency[\"text\"],\n              selectedCurrency[\"cid\"],\n              selectedCurrency[\"flag\"]\n            )\n          }\n        />\n      ) : (\n        <Button\n          className=\"red delete-button\"\n          icon=\"circle outline\"\n          size=\"tiny\"\n          disabled\n        />\n      )}\n    </>\n  );\n};\n\nexport default RemoveButton;\n","import React from \"react\";\nimport { Button, Modal, Input } from \"semantic-ui-react\";\nimport RemoveButton from \"../Common/RemoveButton\";\n\nconst Content = ({\n  selectedCurrencies,\n  handleFromSelect,\n  currencyConvert,\n  handleRemoveCurrency,\n  priceData,\n  baseCurrency,\n}) => {\n  return selectedCurrencies.map((selectedCurrency) => (\n    <div key={selectedCurrency.cid} className=\"currency-box\">\n      <td>\n        <div className=\"ui segment \">\n          <i className={selectedCurrency[\"flag\"] + \" flag\"} />\n          <Input\n            className=\"currency-name\"\n            onChange={handleFromSelect}\n            value={selectedCurrency.text}\n          />\n          <Input\n            className=\"currency-name\"\n            onChange={currencyConvert}\n            placeholder=\"Enter an amount\"\n            currency={selectedCurrency.value}\n            value={\n              priceData\n                ? priceData.rates[selectedCurrency[\"value\"]] !== undefined\n                  ? (1 / priceData.rates[selectedCurrency[\"value\"]]).toFixed(\n                      4\n                    ) + `  ${baseCurrency}`\n                  : \"1.000 EUR\"\n                : null\n            }\n          />\n          <span> </span>\n          <RemoveButton\n            selectedCurrency={selectedCurrency}\n            handleRemoveCurrency={handleRemoveCurrency}\n          />\n        </div>\n      </td>\n    </div>\n  ));\n};\n\nexport default Content;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Input } from \"semantic-ui-react\";\nimport selectedCurrenciesJSON from \"../../data/selectedCurrencies.json\";\nimport optionsJSON from \"../../data/options.json\";\nimport ModalContent from \"../Common/ModalContent\";\nimport \"../../App.css\";\nimport RemoveButton from \"../Common/RemoveButton\";\nimport TimeStamp from \"../Common/TimeStamp\";\nimport Content from \"../Common/Content\";\n\nconst CurrencyTable = ({ baseCurrency, priceData }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newCurrencies, setNewCurrencies] = useState([]);\n  const [selectedCurrencies, setSelectedCurrencies] = useState(\n    JSON.parse(localStorage.getItem(\"homeSelectedCurrencies\")) ||\n      selectedCurrenciesJSON\n  );\n  const [options, setOptions] = useState(optionsJSON);\n  const selectedValues = selectedCurrencies.map(\n    (selectedValue) => selectedValue.cid\n  );\n  localStorage.setItem(\n    \"homeSelectedCurrencies\",\n    JSON.stringify(selectedCurrencies)\n  );\n\n  const handleSubmit = () => {\n    if (newCurrencies.length > 0) {\n      const newSelectedCurrencies = [...selectedCurrencies, ...newCurrencies];\n      setSelectedCurrencies(newSelectedCurrencies);\n    }\n    setModalOpen(false);\n    setNewCurrencies([]);\n  };\n\n  const handleCancel = () => {\n    setModalOpen(false);\n    setNewCurrencies(newCurrencies);\n  };\n\n  const handleToggle = (e, data) => {\n    let addedCurrencies = [...newCurrencies];\n    if (data.checked === true) {\n      addedCurrencies.push({\n        value: data.value,\n        text: data.text,\n        cid: data.cid,\n        flag: data.flag,\n        delete: \"X\",\n      });\n    } else {\n      addedCurrencies = addedCurrencies.filter(\n        (addedCurrency) => addedCurrency.value !== data.value\n      );\n    }\n    setNewCurrencies(addedCurrencies);\n  };\n\n  const handleRemoveCurrency = (value, text, cid, flag) => {\n    const currencyAddedToOptions = [...options];\n    currencyAddedToOptions.push({ value, text, cid, flag });\n    const selectedCurrenciesFiltered = selectedCurrencies.filter(\n      (s) => s.cid !== cid\n    );\n    currencyAddedToOptions.sort(function (a, b) {\n      return a.cid - b.cid;\n    });\n    setSelectedCurrencies(selectedCurrenciesFiltered);\n    setOptions(currencyAddedToOptions);\n  };\n\n  useEffect(() => {\n    const updatedOptions = options.filter(\n      (option) => !selectedValues.includes(option.cid)\n    );\n    setOptions(updatedOptions);\n  }, [selectedCurrencies]);\n\n  return (\n    <div className=\"currency-table\">\n      <div className=\"currency-list\">\n        <div className=\"form\">\n          <tbody>\n            <Content\n              selectedCurrencies={selectedCurrencies}\n              priceData={priceData}\n              handleRemoveCurrency={handleRemoveCurrency}\n              baseCurrency={baseCurrency}\n            />\n          </tbody>\n        </div>\n        <div className=\"currency-add-button\">\n          <Button className=\"blue \" onClick={() => setModalOpen(true)}>\n            +\n          </Button>\n        </div>\n        <TimeStamp />\n      </div>\n\n      <Modal\n        closeIcon\n        open={modalOpen}\n        onSubmit={handleSubmit}\n        size=\"mini\"\n        className=\"modal\"\n        onClose={() => setModalOpen(false)}\n        onOpen={() => setModalOpen(true)}\n      >\n        <Modal.Content scrolling>\n          <ModalContent options={options} handleToggle={handleToggle} />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            type=\"cancel\"\n            color=\"red\"\n            content=\"Close\"\n            modalContent={<ModalContent />}\n            onClick={handleCancel}\n          />\n          <Button\n            type=\"submit\"\n            color=\"green\"\n            content=\"Save\"\n            modalContent={<ModalContent />}\n            onClick={handleSubmit}\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CurrencyTable;\n","import React from \"react\";\nimport { Select } from \"semantic-ui-react\";\n\nconst BaseCurrencySelector = ({ handleFromSelect, options, fromCurrency }) => {\n  return (\n    <div>\n      <div className=\"price-container\">\n        <div className=\"form\">\n          <Select\n            placeholder=\"Select your currency\"\n            onChange={handleFromSelect}\n            options={options}\n            value={fromCurrency}\n          ></Select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BaseCurrencySelector;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../App.css\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport CurrencyTable from \"./CurrencyTable\";\nimport optionsJSON from \"../../data/options.json\";\nimport selectedCurrenciesJSON from \"../../data/selectedCurrencies.json\";\nimport BaseCurrencySelector from \"../Common/BaseCurrencySelector\";\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [priceData, setPriceData] = useState();\n  const [fromCurrency, setFromCurrency] = useState(\"TRY\");\n  const options = [...selectedCurrenciesJSON, ...optionsJSON];\n  const BASE_URL_CURRENCY = `https://api.exchangeratesapi.io/latest?base=${fromCurrency}`;\n\n  const fetchCurrencies = async () => {\n    setLoading(true);\n    const result = await fetch(BASE_URL_CURRENCY);\n    const resultCurrencies = await result.json();\n    setPriceData(resultCurrencies);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCurrencies();\n  }, []);\n\n  useEffect(() => {\n    fetchCurrencies();\n  }, [fromCurrency]);\n\n  if (priceData) {\n    Object.entries(priceData.rates).map(([key, value]) => ({\n      [key]: value,\n    }));\n  }\n\n  const handleFromSelect = (e, data) => {\n    setFromCurrency(data.value);\n  };\n\n  if (loading || !priceData) {\n    return (\n      <div>\n        <Dimmer active inverted>\n          <Loader>Loading...</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <BaseCurrencySelector\n        handleFromSelect={handleFromSelect}\n        options={options}\n        fromCurrency={fromCurrency}\n      />\n      <CurrencyTable baseCurrency={fromCurrency} priceData={priceData} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Input } from \"semantic-ui-react\";\nimport selectedCurrenciesJSON from \"../../data/selectedCurrencies.json\";\nimport optionsJSON from \"../../data/options.json\";\nimport ModalContent from \"../Common/ModalContent\";\nimport \"../../App.css\";\nimport RemoveButton from \"../Common/RemoveButton\";\nimport TimeStamp from \"../Common/TimeStamp\";\nimport Content from \"../Common/Content\";\n// import Content from '../Common/'\n\nconst WalletTable = ({ baseCurrency, priceData }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newCurrencies, setNewCurrencies] = useState([]);\n  const [total, setTotal] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [fromCurrency, setFromCurrency] = useState(\"TRY\");\n  const [toCurrencyValue, setToCurrencyValue] = useState(0);\n  const [selectedCurrencies, setSelectedCurrencies] = useState(\n    JSON.parse(localStorage.getItem(\"homeSelectedCurrencies\")) ||\n      selectedCurrenciesJSON\n  );\n  const [options, setOptions] = useState(optionsJSON);\n  const selectedValues = selectedCurrencies.map(\n    (selectedValue) => selectedValue.cid\n  );\n\n  localStorage.setItem(\n    \"homeSelectedCurrencies\",\n    JSON.stringify(selectedCurrencies)\n  );\n\n  const handleTotalAmount = () => {\n    const totalValueObject = Object.values(total);\n    let totalAmountNumber = 0;\n    totalValueObject.forEach((t) => (totalAmountNumber += parseFloat(t)));\n    setTotalAmount(totalAmountNumber);\n  };\n  const handleFromSelect = (e, data) => {\n    setFromCurrency(data.value);\n    console.log(fromCurrency);\n  };\n\n  const handleSubmit = () => {\n    if (newCurrencies.length > 0) {\n      const newSelectedCurrencies = [...selectedCurrencies, ...newCurrencies];\n      setSelectedCurrencies(newSelectedCurrencies);\n    }\n    setModalOpen(false);\n    setNewCurrencies([]);\n  };\n\n  const handleCancel = () => {\n    setModalOpen(false);\n    setNewCurrencies(newCurrencies);\n  };\n\n  const handleToggle = (e, data) => {\n    let addedCurrencies = [...newCurrencies];\n    if (data.checked === true) {\n      addedCurrencies.push({\n        value: data.value,\n        text: data.text,\n        cid: data.cid,\n        flag: data.flag,\n        delete: \"X\",\n      });\n    } else {\n      addedCurrencies = addedCurrencies.filter(\n        (addedCurrency) => addedCurrency.value !== data.value\n      );\n    }\n    setNewCurrencies(addedCurrencies);\n  };\n\n  const handleRemoveCurrency = (value, text, cid, flag) => {\n    const currencyAddedToOptions = [...options];\n    currencyAddedToOptions.push({ value, text, cid, flag });\n    const selectedCurrenciesFiltered = selectedCurrencies.filter(\n      (s) => s.cid !== cid\n    );\n    if (total[value]) {\n      total[value] = 0;\n    }\n    handleTotalAmount();\n    currencyAddedToOptions.sort(function (a, b) {\n      return a.cid - b.cid;\n    });\n    setTotal(total);\n    setSelectedCurrencies(selectedCurrenciesFiltered);\n    setOptions(currencyAddedToOptions);\n  };\n\n  useEffect(() => {\n    const updatedOptions = options.filter(\n      (option) => !selectedValues.includes(option.cid)\n    );\n    setOptions(updatedOptions);\n    localStorage.clear();\n  }, [selectedCurrencies]);\n\n  const currencyConvert = (e, data) => {\n    setToCurrencyValue(\n      priceData &&\n        parseFloat(toCurrencyValue) +\n          (data.value * (1 / priceData.rates[data.currency])).toFixed(4)\n    );\n\n    if (data) {\n      total[data.currency] = parseFloat(\n        data.value * parseFloat(1 / priceData.rates[data.currency])\n      ).toFixed(4);\n    }\n    handleTotalAmount();\n  };\n\n  return (\n    <div className=\"currency-table\">\n      <div className=\"currency-list\">\n        <h1>\n          TOTAL AMOUNT:\n          {` ${\n            parseFloat(totalAmount.toFixed(2)).toLocaleString() +\n            \" \" +\n            baseCurrency\n          }`}\n        </h1>\n        <div className=\"form\">\n          <tbody>\n            <Content\n              selectedCurrencies={selectedCurrencies}\n              handleFromSelect={handleFromSelect}\n              currencyConvert={currencyConvert}\n              handleRemoveCurrency={handleRemoveCurrency}\n            />\n          </tbody>\n        </div>\n        <div className=\"currency-add-button\">\n          <Button className=\"blue \" onClick={() => setModalOpen(true)}>\n            +\n          </Button>\n        </div>\n        <TimeStamp />\n      </div>\n\n      <Modal\n        closeIcon\n        open={modalOpen}\n        onSubmit={handleSubmit}\n        size=\"mini\"\n        className=\"modal\"\n        onClose={() => setModalOpen(false)}\n        onOpen={() => setModalOpen(true)}\n      >\n        <Modal.Content scrolling>\n          <ModalContent options={options} handleToggle={handleToggle} />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            type=\"cancel\"\n            color=\"red\"\n            content=\"Close\"\n            modalContent={<ModalContent />}\n            onClick={handleCancel}\n          />\n          <Button\n            type=\"submit\"\n            color=\"green\"\n            content=\"Save\"\n            modalContent={<ModalContent />}\n            onClick={handleSubmit}\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nexport default WalletTable;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../App.css\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport optionsJSON from \"../../data/options.json\";\nimport selectedCurrenciesJSON from \"../../data/selectedCurrencies.json\";\nimport WalletTable from \"./WalletTable\";\nimport BaseCurrencySelector from \"../Common/BaseCurrencySelector\";\n\nconst Wallet = () => {\n  const [loading, setLoading] = useState(true);\n  const [priceData, setPriceData] = useState();\n  const [fromCurrency, setFromCurrency] = useState(\"TRY\");\n  const options = [...selectedCurrenciesJSON, ...optionsJSON];\n  const BASE_URL_CURRENCY = `https://api.exchangeratesapi.io/latest?base=${fromCurrency}`;\n\n  const fetchCurrencies = async () => {\n    setLoading(true);\n    const result = await fetch(BASE_URL_CURRENCY);\n    const resultCurrencies = await result.json();\n    setPriceData(resultCurrencies);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCurrencies();\n  }, []);\n\n  useEffect(() => {\n    fetchCurrencies();\n  }, [fromCurrency]);\n\n  if (priceData) {\n    Object.entries(priceData.rates).map(([key, value]) => ({\n      [key]: value,\n    }));\n  }\n\n  const handleFromSelect = (e, data) => {\n    setFromCurrency(data.value);\n  };\n\n  if (loading || !priceData) {\n    return (\n      <div>\n        <Dimmer active inverted>\n          <Loader>Loading...</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <BaseCurrencySelector\n        handleFromSelect={handleFromSelect}\n        options={options}\n        fromCurrency={fromCurrency}\n      />\n      <WalletTable baseCurrency={fromCurrency} priceData={priceData} />\n    </div>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport CurrencyConverter from \"./components/Charts/CurrencyConverter\";\nimport Navbar from \"./components/Common/Navbar\";\nimport Home from \"./components/Home/Home\";\nimport Wallet from \"./components/Wallet/Wallet\";\n\nconst App = () => {\n  return (\n    <div>\n      <body>\n        <HashRouter>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/charts\" component={CurrencyConverter} />\n            <Route path=\"/wallet\" component={Wallet} />\n          </Switch>\n        </HashRouter>\n      </body>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"body\" />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}